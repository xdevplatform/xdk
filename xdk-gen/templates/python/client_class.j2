{% import "client_macros" as macros %}
"""
Auto-generated {{ tag.display_name }} client for the X API.

This module provides a client for interacting with the {{ tag.display_name }} endpoints of the X API.
{% if operations | selectattr('is_streaming') | list %}Real-time streaming operations return generators that yield data as it arrives.{% endif %}
All methods, parameters, and response models are generated from the OpenAPI specification.

Generated automatically - do not edit manually.
"""

from __future__ import annotations
from typing import Dict, List, Optional, Any, Union, cast, TYPE_CHECKING{% if operations | selectattr('is_streaming') | list %}, Iterator, Generator{% endif %}
import requests
import time
{% if operations | selectattr('is_streaming') | list %}import json{% endif %}

if TYPE_CHECKING:
    from ..client import Client
from .models import (
    {% for operation in operations %}
    {% if operation.request_body %}
    {{ operation.class_name }}Request,
    {% if operation.responses and "200" in operation.responses or operation.responses and "201" in operation.responses %}
    {{ operation.class_name }}Response,
    {% endif %}
    {% elif operation.responses and "200" in operation.responses or operation.responses and "201" in operation.responses %}
    {{ operation.class_name }}Response,
    {% endif %}
    {% endfor %}
)

class {{ tag.class_name }}Client:
    """{% if operations | selectattr('is_streaming') | list %}Streaming {% endif %}Client for {{ tag.display_name }} operations"""
    
    def __init__(self, client: Client):
        self.client = client
    
    {% for operation in operations %}
    def {{ operation.method_name }}(self, {{ macros.method_parameters(operation) }}) -> {{ macros.return_type(operation) }}:
        {{ macros.method_docstring(operation) }}
        {{ macros.build_url(operation) }}

        {{ macros.setup_authentication(operation) }}
        
        {{ macros.build_query_params(operation) }}
        
        {{ macros.build_headers(operation) }}
        
        {{ macros.prepare_request_data(operation) }}
        
        {% if operation.is_streaming %}
        {{ macros.streaming_request(operation) }}
        {% else %}
        {{ macros.regular_request(operation) }}
        {% endif %}

    {% endfor %}
